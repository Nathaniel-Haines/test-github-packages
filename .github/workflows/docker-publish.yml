name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "*" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  REPOSITORY_NAME: ${{ github.repository }}


jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          
      - name: Check if renv.lock has been updated
        uses: tj-actions/changed-files@v14.2
        id: changed_files
        
      # Find the PR associated with this push, if there is one.
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr

      - name: Build image
        if: ${{ contains(steps.changed_files.outputs.modified_files, 'renv.lock') }}
        run: |
          REPOSITORY_NAME=$(echo $REPOSITORY_NAME | tr '[A-Z]' '[a-z]')
          docker build . --file Dockerfile --tag $REPOSITORY_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        if: ${{ contains(steps.changed_files.outputs.modified_files, 'renv.lock') }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          echo "${{ github.ref }}"
          echo "${{ github.ref_name }}"

      - name: Bump version and push tag
        if: ${{ contains(steps.changed_files.outputs.modified_files, 'renv.lock') }}
        uses: anothrNick/github-tag-action@1.36.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE_SUFFIX: ${{ steps.findPr.outputs.pr }}

      - name: Tag and push image
        if: ${{ contains(steps.changed_files.outputs.modified_files, 'renv.lock') }}
        run: |
          IMAGE_NAME=ghcr.io/$REPOSITORY_NAME

          # Change all uppercase to lowercase
          REPOSITORY_NAME=$(echo $REPOSITORY_NAME | tr '[A-Z]' '[a-z]')
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[A-Z]' '[a-z]')
          
          # Use Docker `latest` tag convention plus semantic versioning
          VERSION=${{ github.ref_name }}
          SEMVER=${{ steps.tag.outputs.tag }}
          
          # Show some info
          echo REPOSITORY_NAME=$REPOSITORY_NAME
          echo VERSION=$VERSION
          echo SEMVER=$SEMVER
          
          # If main branch, tag and push latest
          if [ "$VERSION" == "main" ]
          then
            docker tag $REPOSITORY_NAME $IMAGE_NAME:latest
            docker push $IMAGE_NAME:latest
          fi
          
          # Tag + Push semantic versioned image
          docker tag $REPOSITORY_NAME $IMAGE_NAME:$SEMVER
          docker push $IMAGE_NAME:$SEMVER
